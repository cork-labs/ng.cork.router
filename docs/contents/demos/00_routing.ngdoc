@ngdoc overview
@name Routing
@description

## Routing

In this example we will add a couple of **named** routes to `$routeProvider` via the `corkRouterProvider` wrapper.

<doc:example module="exampleApp" height="200">
    <doc:source>
        <script>
            angular.module('exampleApp', ['ngRoute', 'ng.cork.router'])
            .config(['$locationProvider', 'corkRouterProvider', function ($locationProvider, corkRouterProvider) {
                //$locationProvider.html5Mode(false);
                corkRouterProvider.addRoute('foo', {
                    path: '/foo',
                    controller: 'fooCtrl',
                    template: 'welcome to foo'
                });
                corkRouterProvider.addRoute('bar', {
                    path: '/bar/:id',
                    controller: 'barCtrl',
                    template: 'welcome to bar {{id}}'
                });
            }])
            .controller('exampleCtrl', ['$scope', 'corkRouter', function ($scope, corkRouter) {
                $scope.router = corkRouter;
                $scope.goToBar = function () {
                    corkRouter.goTo('bar', {id: $scope.id});
                }
            }])
            .controller('fooCtrl', ['$scope', 'corkRouter', function ($scope, corkRouter) {
                // ... controller code
            }])
            .controller('barCtrl', ['$scope', 'corkRouter', function ($scope, corkRouter) {
                // ... controller code
                $scope.id = corkRouter.$params.id;
            }]);
        </script>
        <style>
            .container {
                padding: 10px;
            }
        </style>
        <div data-ng-controller="exampleCtrl" class="container">
            <p>Go to route <button ng-click="router.goTo('foo')">/foo</button><p>
            <p>Go to route <button ng-click="goToBar()">/bar/:id</button> with id: <input type="text" ng-model="id" /><p>
        </div>
        <div ng-view class="container"></div>
    </doc:source>
</doc:example>
